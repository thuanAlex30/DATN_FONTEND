// Test script ƒë·ªÉ ki·ªÉm tra API th√¥ng b√°o c√¥ng khai
const axios = require('axios');

const API_BASE_URL = 'http://localhost:3000/api/v1';

async function testPublicNotifications() {
    try {
        console.log('üîç ƒêang ki·ªÉm tra API th√¥ng b√°o c√¥ng khai...');
        
        const response = await axios.get(`${API_BASE_URL}/notifications/public`, {
            timeout: 10000
        });
        
        console.log('‚úÖ API th√¥ng b√°o c√¥ng khai ho·∫°t ƒë·ªông t·ªët!');
        console.log('üìä D·ªØ li·ªáu tr·∫£ v·ªÅ:');
        console.log(JSON.stringify(response.data, null, 2));
        
        if (response.data.data && response.data.data.notifications) {
            console.log(`üìù T·ªïng s·ªë th√¥ng b√°o c√¥ng khai: ${response.data.data.notifications.length}`);
            
            response.data.data.notifications.forEach((notification, index) => {
                console.log(`\nüì¢ Th√¥ng b√°o ${index + 1}:`);
                console.log(`   - ID: ${notification._id}`);
                console.log(`   - Ti√™u ƒë·ªÅ: ${notification.title}`);
                console.log(`   - Lo·∫°i: ${notification.type}`);
                console.log(`   - M·ª©c ƒë·ªô ∆∞u ti√™n: ${notification.priority}`);
                console.log(`   - Danh m·ª•c: ${notification.category}`);
                console.log(`   - Th·ªùi gian: ${notification.relative_time || notification.formatted_created_at}`);
            });
        }
        
    } catch (error) {
        console.error('‚ùå L·ªói khi ki·ªÉm tra API th√¥ng b√°o c√¥ng khai:');
        if (error.response) {
            console.error(`   - Status: ${error.response.status}`);
            console.error(`   - Data: ${JSON.stringify(error.response.data, null, 2)}`);
        } else if (error.request) {
            console.error('   - Kh√¥ng c√≥ ph·∫£n h·ªìi t·ª´ server');
        } else {
            console.error(`   - L·ªói: ${error.message}`);
        }
    }
}

// Ch·∫°y test
testPublicNotifications();

